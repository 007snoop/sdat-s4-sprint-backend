name: Build, Push to ECR, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: airportsim-backend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC
      contents: read    # Required to read repo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Configure AWS credentials from IAM Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::876455127118:role/GitHubActions-Flight-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        run: |
          ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text)
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker push $ECR_URI:$IMAGE_TAG
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

  # Optional Deploy Job (runs only on push to main)
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials from IAM Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::876455127118:role/GitHubActions-Flight-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: SSH into EC2 and deploy container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ECR_URI=${{ env.ECR_URI }}
            docker pull $ECR_URI:${{ env.IMAGE_TAG }}
            docker stop airportsim || true
            docker rm airportsim || true
            docker run -d \
              --name airportsim \
              -p 80:8080 \
              -e AWS_REGION=${{ env.AWS_REGION }} \
              -e useAwsSecrets=true \
              $ECR_URI:${{ env.IMAGE_TAG }}
