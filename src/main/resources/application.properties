# --- App & HTTP ---
spring.application.name=sdat-s4-sprint-backend
server.port=8080
server.address=0.0.0.0
# Remove /api prefix so endpoints are at /airports, /aircraft, /passengers
server.servlet.context-path=/

# --- JPA / Hikari (tuned for small EC2) ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.datasource.hikari.connectionTimeout=10000
spring.datasource.hikari.validationTimeout=5000
spring.datasource.hikari.maximumPoolSize=5

# --- Actuator (health for container checks) ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.health.defaults.enabled=true
management.endpoint.health.show-details=never

# --- Seeder (your custom runner uses these) ---
# seeds only when enabled; tune counts as you like
app.seed.enabled=true
app.seed.flight-count=40

# --- CSV import toggles (set to true only when you want to seed from CSVs) ---
# These are read by CsvImportRunner; override via env if needed.
app.csv.import.airports=false
app.csv.import.generateFlights=false

# --- CORS (allow your frontend origins) ---
# Override via env FRONTEND_ORIGINS if you deploy a different frontend domain
app.cors.allowed-origins=${FRONTEND_ORIGINS:http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173}

# --- Secrets mode ---
useAwsSecrets=true

# --- Local fallback (only used if useAwsSecrets=false) ---
DB_URL=jdbc:mysql://localhost:3306/airportsim?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&connectTimeout=5000&socketTimeout=10000
DB_USER=root
DB_PASS=password
